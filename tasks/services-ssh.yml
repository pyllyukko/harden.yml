---
- name: Debian SSH checks
  when: ansible_distribution == "Debian" or ansible_distribution == "Kali" or ansible_distribution == "Ubuntu"
  tags:
    - ssh
    - debian
    - check
  block:
    - name: Check SSH daemon service state
      ansible.builtin.service_facts:
      tags: services
    - name: Check if SSH client is installed (Debian)
      ansible.builtin.package_facts:
        manager: auto
- name: Check SSH daemon service state (Slackware)
  become: true
  when: ansible_distribution == "Slackware"
  ansible.builtin.stat:
    path: /etc/rc.d/rc.sshd
  register: rc_sshd
  tags:
    - ssh
    - slackware
    - check

# This is used in sshd_config.j2 template(s)
- name: Stat /etc/krb5.keytab
  ansible.builtin.stat:
    path: /etc/krb5.keytab
  register: stat_keytab
  tags:
    - ssh
    - check
# TODO: Make Slackware use /etc/ssh/sshd_config.d
- name: Harden SSH daemon configuration (Slackware)
  ansible.builtin.template:
    src: "{{ playbook_dir }}/templates/sshd_config-{{ ansible_distribution }}.j2"
    dest: /etc/ssh/sshd_config
    validate: /usr/sbin/sshd -t -f %s
    owner: root
    group: root
    mode: '0600'
    backup: true
  register: result
  # sshd validation fails when the hostkeys do not exist
  failed_when:
    - result.failed == true
    - '"sshd: no hostkeys available -- exiting." not in result.stderr'
  tags:
    - services
    - configuration
    - ssh
    - slackware
  notify:
    - "Restart sshd (Slackware)"
  become: true
  when: >
    ansible_distribution == "Slackware" and rc_sshd.stat.exists and rc_sshd.stat.xusr
- name: Harden SSH daemon configuration (Debian)
  ansible.builtin.template:
    src: "{{ playbook_dir }}/templates/sshd_config.j2"
    dest: /etc/ssh/sshd_config.d/harden.conf
    validate: /usr/sbin/sshd -t -f %s
    owner: root
    group: root
    mode: '0600'
    backup: true
  register: result
  # sshd validation fails when the hostkeys do not exist
  failed_when:
    - result.failed == true
    - '"sshd: no hostkeys available -- exiting." not in result.stderr'
  tags:
    - services
    - configuration
    - ssh
    - debian
  notify:
    - "Restart sshd (Debian)"
  become: true
  # Skip the task in Debian if ssh.service does not exist
  when: >
    (ansible_distribution == "Debian" or ansible_distribution == "Kali" or ansible_distribution == "Ubuntu") and ansible_facts.services.ssh is defined

- name: Harden SSH client configuration
  tags:
    - configuration
    - slackware
    - ssh
  become: true
  when: ansible_distribution == "Slackware"
  ansible.builtin.template:
    src: "ssh_config-{{ ansible_distribution }}.j2"
    dest: /etc/ssh/ssh_config
    owner: root
    group: root
    mode: '0644'
    backup: true
- name: Harden SSH client configuration (Debian)
  tags:
    - configuration
    - debian
    - ssh
  become: true
  when:
    - ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"
    - '"openssh-client" in ansible_facts.packages'
  ansible.builtin.template:
    src: ssh_config-Slackware.j2
    dest: /etc/ssh/ssh_config.d/harden.conf
    owner: root
    group: root
    mode: '0644'
# These are only used if you have diffie-hellman-group-exchange-sha* key exchanges enabled in sshd_config.
- name: Remove 2048-bit moduli from /etc/ssh/moduli
  become: true
  tags:
    - pki
    - configuration
    - ssh
  ansible.builtin.lineinfile:
    path: /etc/ssh/moduli
    state: absent
    regexp: '^[0-9]{14}\s+[0-9]+\s+[0-9]+\s+[0-9]+\s+2047\b'
    backup: true
#- name: Set SSH_USE_STRONG_RNG for sshd (RH)
#  when: ansible_os_family == "RedHat"
#  become: true
#  tags:
#    - configuration
#    - ssh
#    - centos
#  ansible.builtin.lineinfile:
#    path: /etc/sysconfig/sshd
#    state: present
#    regexp: '^SSH_USE_STRONG_RNG=[0-9]+$'
#    line: 'SSH_USE_STRONG_RNG=32'
#    backup: true

- name: Print Lynis score for SSH hardening
  become: true
  tags: ssh
  when: run_lynis_after_hardening
  block:
    - name: Run Lynis test group SSH hardening
      ansible.builtin.command: lynis audit system -q --skip-plugins --tests-from-group ssh # noqa no-changed-when
      tags: check
    - name: slurp /var/log/lynis.log
      ansible.builtin.slurp:
        src: /var/log/lynis.log
      no_log: true
      register: lynis_log
    - name: Print Lynis score for SSH hardening
      ansible.builtin.debug:
        msg: "{{ lynis_log['content'] | b64decode | regex_search('Hardening index : \\[([0-9]+)\\]', '\\1', multiline=True) }}"
