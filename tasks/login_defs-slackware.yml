---
- name: /etc/shutdown.allow
  tags:
    - configuration
    - authorization
  become: true
  when: ansible_distribution == "Slackware"
  block:
    - name: Create /etc/shutdown.allow
      ansible.builtin.copy:
        content: ""
        dest: /etc/shutdown.allow
        force: false
        owner: root
        group: root
        mode: '0600'
    - name: Use shutdown -a in /etc/inittab
      tags: inittab
      ansible.builtin.replace:
        path: /etc/inittab
        regexp: '^(ca::ctrlaltdel:/sbin/shutdown -t5 -r now)$'
        replace: '\g<1> -a'
        validate: '/bin/grep "^ca::ctrlaltdel:/sbin/shutdown -t5 -r now -a$" %s'

# ANSSI-BP-028 R36 - Changing the default value of UMASK
- name: Set umask to 077 in /etc/profile (Slackware)
  tags:
    - configuration
    - umask
  become: true
  when: ansible_distribution == "Slackware"
  ansible.builtin.replace:
    path: /etc/profile
    regexp: '^(umask) [0-9]+$'
    replace: '\g<1> 077'
    validate: '/bin/grep "^umask 077$" %s'

# ftp://ftp.slackware.com/pub/slackware/slackware64-current/source/a/shadow/adduser
# Default AGID is "audio cdrom floppy input lp netdev plugdev power scanner video"
- name: Configure defchmod and AGID in /usr/sbin/adduser (Slackware)
  tags: configuration
  become: true
  when: ansible_distribution == "Slackware"
  ansible.builtin.replace:
    path: /usr/sbin/adduser
    regexp: '^({{ item.key }}=).+'
    replace: '\g<1>{{ item.value }}'
    validate: "/bin/grep '^{{ item.key }}={{ item.value }}$' %s"
  with_dict:
    defchmod: 700
    AGID: '"audio input netdev plugdev power video"'

# Slackware Linux Benchmark v1.1 - 7.10 Require Authentication For Single-User Mode
# https://web.archive.org/web/20070702234716/http://www.bastille-linux.org:80/jay/anyone-with-a-screwdriver.html
# https://cisofy.com/lynis/controls/AUTH-9308/
- name: Single user mode authentication
  tags:
    - configuration
    - authentication
    - inittab
  become: true
  when: ansible_distribution == "Slackware"
  block:
    - name: Remove S from System initialization (Slackware)
      ansible.builtin.replace:
        path: /etc/inittab
        regexp: '^si:S:sysinit:/etc/rc\.d/rc\.S$'
        replace: 'si::sysinit:/etc/rc.d/rc.S'
        validate: '/bin/grep "^si::sysinit:/etc/rc.d/rc.S$" %s'
    - name: Create separate entry for single user mode which requires authentication (Slackware)
      ansible.builtin.blockinfile:
        path: /etc/inittab
        insertafter: "^x1:4:respawn:/etc/rc.d/rc.4$"
        block: |
          # single user mode
          ~~:S:wait:/sbin/sulogin
    - name: Fix single user mode in rc.K
      ansible.builtin.lineinfile:
        path: /etc/rc.d/rc.K
        regexp: '^/sbin/telinit'
        line: /sbin/telinit -t 1 S

- name: Add LESS variables and disable core dumps
  tags: configuration
  ansible.builtin.blockinfile:
    path: /etc/profile
    block: |
      export LESSSECURE=1
      export LESSHISTFILE="/dev/null"
      ulimit -Hc 0
  become: true
  when: ansible_distribution == "Slackware"

# https://github.com/ansible/ansible/issues/11024
# Cleanup Slackware's groups
- name: Slackware groups
  when: ansible_distribution == "Slackware"
  become: true
  block:
    # http://ftp.slackware.com/pub/slackware/slackware64-15.0/source/a/etc/group.new
    # Didn't want to use replace here, as this is herecy.
    # But this was the only way I could make this idempotent.
    - name: Remove all members from certain groups (Slackware)
      ansible.builtin.replace:
        path: /etc/group
        regexp: '^({{ item }}:x:[0-9]+:).*$'
        replace: '\g<1>'
        validate: '/bin/grep "^{{ item }}:x:[0-9]\+:$" %s'
      tags: accounts
      with_items:
        - root
        - bin
        - daemon
        - sys
        - adm
        - disk
    - name: Remove uucp from dialout group (Slackware)
      ansible.builtin.command: gpasswd -d uucp dialout
      register: result
      changed_when: '"is not a member of" not in result.stderr'
      failed_when:
        - result.failed == true
        - '"is not a member of" not in result.stderr'
      tags: accounts
    # root is root and that's enough :)
    - name: Remove root from all supplemental groups
      ansible.builtin.command: gpasswd -d root {{ item }}
      register: result
      failed_when:
        - result.failed == true
        - '"is not a member of" not in result.stderr'
      changed_when: '"is not a member of" not in result.stderr'
      tags: accounts
      with_items:
        - wheel
        - audio

- name: Slackwate grpck
  become: true
  tags: accounts
  block:
    - name: Check if gshadow needs fixing (Slackware)
      when: ansible_distribution == "Slackware"
      ansible.builtin.command: grpck -r
      tags: check
      changed_when: false
      failed_when: false
      register: grpck
    - name: Fix gshadow (Slackware)
      when:
        - ansible_distribution == "Slackware"
        - '"no matching group file entry in /etc/gshadow" in grpck.stdout'
      # yes might return 141
      ansible.builtin.shell: set -o pipefail; yes | grpck
      register: result
      changed_when:
        - result.rc != 0
      failed_when:
        - result.failed == true
        - '"grpck: the files have been updated" not in result.stdout'
