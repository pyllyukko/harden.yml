---
- name: Install glibc package (Slackware)
  when: ansible_distribution == "Slackware"
  become: true
  community.general.slackpkg:
    name: glibc
    state: present
    update_cache: true
  tags:
    - packages
    - slackware

- name: Install sudo (Debian)
  become: true
  ansible.builtin.apt:
    name: sudo
    update_cache: true
  when: ansible_distribution == "Debian" or ansible_distribution == "Kali"
  tags:
    - packages
    - debian

# ANSSI-BP-028 R39 - Sudo configuration guidelines
# ANSSI-BP-028 R40 - Using unprivileged users as target for sudo commands
# ANSSI-BP-028 R41 - Limiting the number of commands requiring the use of the EXEC directive
# ANSSI-BP-028 R44 - Editing files securely with sudo
- name: 'Configure /etc/sudoers'
  when: >
    ansible_distribution == "Slackware" or
    ansible_distribution == "Debian" or
    ansible_distribution == "Kali"
  become: true
  block:
    - name: 'Create /etc/sudoers.new'
      ansible.builtin.template:
        src: "{{ playbook_dir }}/templates/sudoers.j2"
        dest: /etc/sudoers.new
        mode: '0440'
        owner: root
        group: root
    - name: Create /etc/sudo_env
      ansible.builtin.copy:
        content: "LESSSECURE=1\nPAGER=/usr/bin/less\nMANPAGER=/usr/bin/less\nSYSTEMD_PAGER=/usr/bin/less\nTMOUT={{ session_timeout * 60 }}\n"
        dest: /etc/sudo_env
        owner: root
        group: root
        mode: '0400'
        force: false
      tags: configuration
    - name: Remove /etc/sudoers.d/10-shells
      ansible.builtin.file:
        path: /etc/sudoers.d/10-shells
        state: absent
      when: not sudo_ids
    - name: sudoers IDS
      ansible.builtin.import_tasks: sudoers-ids.yml
      when: sudo_ids
    # https://jpmens.net/2013/02/06/don-t-try-this-at-the-office-etc-sudoers/
    - name: 'Validate /etc/sudoers.new'
      ansible.builtin.command: visudo -cs -f /etc/sudoers.new
      register: result
      changed_when:
        - '"parsed OK" not in result.stdout'
      tags: check
    # As we define "Defaults noexec" in our main sudoers file, sudo will "break" if
    # there are includes without explicit exec that match our "become: true" tasks.
    # Usually these are catchall rules like "vagrant ALL=(ALL) NOPASSWD: ALL".
    #
    # SUDOERS(5): "Where there are multiple matches, the last match is used (which is not necessarily the most specific match)."
    - name: Find files in /etc/sudoers.d/
      ansible.builtin.find:
        paths: /etc/sudoers.d
        file_type: file
        excludes: 'README'
      register: sudoers_includes
    - name: Fix NOPASSWD rules in /etc/sudoers.d/ to have explicit EXEC
      ansible.builtin.replace:
        path: '{{ item.path }}'
        regexp: '^(.+\s+ALL\s*=\s*\(ALL(:ALL)?\)\s*NOPASSWD:)(\s*ALL)$'
        replace: '\g<1>EXEC:\g<3>'
        validate: 'visudo -cs -f %s'
      with_items: "{{ sudoers_includes.files }}"
      tags: configuration
    - name: 'Copy /etc/sudoers.new to /etc/sudoers'
      ansible.builtin.copy:
        remote_src: true
        src: /etc/sudoers.new
        dest: /etc/sudoers
        owner: root
        group: root
        mode: '0440'
        backup: true
      tags: configuration
    - name: 'Remove /etc/sudoers.new'
      ansible.builtin.file:
        path: /etc/sudoers.new
        state: absent

# https://www.raspberrypi.org/documentation/configuration/security.md
- name: 'Remove /etc/sudoers.d/010_pi-nopasswd (Raspberry Pi OS)'
  become: true
  ansible.builtin.file:
    path: /etc/sudoers.d/010_pi-nopasswd
    state: absent
  when: ansible_distribution == "Debian"
  tags:
    - configuration
    - debian
- name: sudoers files
  ansible.builtin.import_tasks: filesystem-sudoers.yml
- name: Remove /etc/sudoers.dist (Slackware)
  when: ansible_distribution == "Slackware"
  become: true
  tags: slackware
  ansible.builtin.file:
    path: /etc/sudoers.dist
    state: absent
